#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h>
#include <arpa/inet.h>

#define PORT 12345

int main() {
    srand(time(NULL));

    // Create socket
    int server_socket = socket(AF_INET, SOCK_STREAM, 0);
    if (server_socket == -1) {
        perror("Error creating socket");
        return 1;
    }

    // Bind the socket to an address
    struct sockaddr_in server_address;
    server_address.sin_family = AF_INET;
    server_address.sin_addr.s_addr = INADDR_ANY;
    server_address.sin_port = htons(PORT);

    if (bind(server_socket, (struct sockaddr*)&server_address, sizeof(server_address)) == -1) {
        perror("Error binding");
        close(server_socket);
        return 1;
    }

    // Listen for incoming connections
    if (listen(server_socket, 5) == -1) {
        perror("Error listening");
        close(server_socket);
        return 1;
    }

    printf("Server is listening on port %d\n", PORT);

    // Accept a client connection
    int client_socket;
    struct sockaddr_in client_address;
    int client_address_size = sizeof(client_address);

    client_socket = accept(server_socket, (struct sockaddr*)&client_address, (socklen_t*)&client_address_size);
    if (client_socket == -1) {
        perror("Error accepting client connection");
        close(server_socket);
        return 1;
    }

    // Generate a random number between 100 and 999
    int random_number = 100 + rand() % 900;

    // Send the random number to the client
    send(client_socket, &random_number, sizeof(random_number), 0);

    printf("Random number sent to the client: %d\n", random_number);

    // Close the sockets
    close(client_socket);
    close(server_socket);

    return 0;
}
